angular.module("ngCreateThumbnail",[]).provider("CreateThumbnailService",function(){this.defaults={targetWidth:100,targetHeight:100,sourceX:0,sourceY:0,destX:0,destY:0,sourceWidth:0,sourceHeight:0,reduceStrategy:"",targetType:"blob"},this.$get=["$q",function($q){var defaults=this.defaults;return{create:function(sourceImage,options){function dataURLToBlob(dataURL){var byteString;byteString=dataURL.split(",")[0].indexOf("base64")>=0?atob(dataURL.split(",")[1]):unescape(dataURL.split(",")[1]);for(var mimeString=dataURL.split(",")[0].split(":")[1].split(";")[0],ia=new Uint8Array(byteString.length),i=0;i<byteString.length;i++)ia[i]=byteString.charCodeAt(i);return new Blob([ia],{type:mimeString})}var deferred=$q.defer();return options=options||{},this.loadThumbnail(sourceImage,options).loaded.then(function(canvas){if("function"!=typeof canvas.toDataURL)return deferred.reject("Unsupported browser function toDataURL.");try{var targetType=options.targetType||defaults.targetType,base64=canvas.toDataURL(options.type,options.encoderOptions);if("base64"===targetType)deferred.resolve(base64);else{if("blob"!==targetType)return deferred.reject("Unknown targetType.");var blob=dataURLToBlob(base64);deferred.resolve(blob)}}catch(ex){deferred.reject(ex)}}),deferred.promise},loadThumbnail:function(sourceImage,options){var canvas=this.initialiseCanvas(options);return{created:$q.when(canvas),loaded:this.drawThumbnail(canvas,sourceImage,options)}},initialiseCanvas:function(options){var canvas=angular.element("<canvas></canvas>")[0];return this.setCanvasSize(canvas,options)},setCanvasSize:function(canvas,options){options=options||{};var w=Number(options.targetWidth)||defaults.targetWidth,h=Number(options.targetHeight)||defaults.targetHeight;return canvas.width=w,canvas.height=h,canvas},drawThumbnail:function(canvas,sourceImage,options){function reduce(canvas,sourceImageWidth,sourceImageHeight,targetWidth,targetHeight,reduceStrategy){var factor,settings={};return sourceImageHeight>0&&sourceImageWidth>0&&("shrinkCanvasToFit"===reduceStrategy?(factor=sourceImageHeight>sourceImageWidth?sourceImageWidth/targetWidth:sourceImageHeight/targetHeight,settings.destWidth=sourceImageWidth/factor,settings.destHeight=sourceImageHeight/factor,canvas.width=settings.destWidth,canvas.height=settings.destHeight):"shrinkToFit"===reduceStrategy?sourceImageWidth>sourceImageHeight?(factor=sourceImageWidth/targetWidth,settings.destHeight=factor*targetHeight,settings.destY=sourceImageHeight/2-settings.destHeight/2):(factor=sourceImageHeight/targetHeight,settings.destWidth=factor*targetWidth,settings.destX=sourceImageWidth/2-settings.destWidth/2):"cropToFit"!==reduceStrategy&&""!==reduceStrategy||(settings.destHeight=targetHeight,settings.destWidth=targetWidth,sourceImageWidth>sourceImageHeight?(factor=sourceImageHeight/targetHeight,settings.sourceWidth=factor*targetWidth,settings.sourceX=sourceImageWidth/2-settings.sourceWidth/2):(factor=sourceImageWidth/targetWidth,settings.sourceHeight=factor*targetHeight,settings.sourceY=sourceImageHeight/2-settings.sourceHeight/2))),settings}var deferred=$q.defer();options=options||{};var ctx=canvas.getContext("2d"),img=new Image;return img.onload=function(){var reduceStrategy=options.reduceStrategy||defaults.reduceStrategy,settings=reduce(canvas,img.width,img.height,options.targetWidth,options.targetHeight,reduceStrategy),sourceWidth=Number(settings.sourceWidth)||img.width,sourceHeight=Number(settings.sourceHeight)||img.height,sourceX=Number(settings.sourceX)||defaults.sourceX,sourceY=Number(settings.sourceY)||defaults.sourceY,destX=Number(settings.destX)||defaults.destX,destY=Number(settings.destY)||defaults.destY,destWidth=Number(settings.destWidth)||canvas.width,destHeight=Number(settings.destHeight)||canvas.height;ctx.drawImage(img,sourceX,sourceY,sourceWidth,sourceHeight,destX,destY,destWidth,destHeight),deferred.resolve(canvas)},img.src=sourceImage,deferred.promise}}}]}).directive("uiThumbnailJames",function(CreateThumbnailService){return{restrict:"E",scope:{src:"=",options:"="},link:function(scope,el,attrs){var promises=CreateThumbnailService.loadThumbnail(scope.src,scope.options);promises.created.then(function(canvas){el.append(canvas)}),promises.loaded.then(function(canvas){scope.$watch("src",function(newSrc){CreateThumbnailService.drawThumbnail(canvas,newSrc)}),scope.$watchCollection("options",function(newOptions){CreateThumbnailService.setCanvasSize(canvas,newOptions),CreateThumbnailService.drawThumbnail(canvas,scope.src,newOptions)})})}}});